library(tidyverse)
library(janitor)
###
# Spotify API package
###
install.packages('spotifyr')
library(spotifyr)
###
# tidycensus
###
# library(tidycensus)
###
# Store your passwords to access the spotify api
###
Sys.setenv(SPOTIFY_CLIENT_ID = 'e84bd474ad1f4bc4aa0e309cc6e1b921')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'cc6ecb74cd594c228755ee414848c733')
###
# Set artist
###
artist <- "taylor swift"
###
# Get artist discography
###
taylor_swift_discography <- get_discography(artist, get_spotify_access_token())
###
# Write it out because it takes a while to load
###
write_rds(taylor_swift_discography,"data/taylor_swift_discography.rds")
# Note if API doesn't work, a copy of taylor swift discography is in the data folder for loading.
View(taylor_swift_discography)
get_my_top_artists_or_tracks(type = 'artists', time_range = 'long_term', limit = 5) %>%
get_my_top_artists_or_tracks(type = 'artists', time_range = 'long_term', limit = 5)
artist <- "future"
future_discography <- get_discography(artist, get_spotify_access_token())
artist <- "future"
future_discography <- get_discography(artist, get_spotify_access_token())
library(tidyverse)
library(janitor)
###
# Spotify API package
###
install.packages('spotifyr')
library(spotifyr)
###
# tidycensus
###
# library(tidycensus)
artist <- "future"
future_discography <- get_discography(artist, get_spotify_access_token())
artist <- "future"
future_discography <- get_discography(artist, get_spotify_access_token())
artist <- "young_thug"
future_discography <- get_discography(artist, get_spotify_access_token())
###
# Store your passwords to access the spotify api
###
Sys.setenv(SPOTIFY_CLIENT_ID = 'e84bd474ad1f4bc4aa0e309cc6e1b921')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'cc6ecb74cd594c228755ee414848c733')
artist <- "future"
future_discography <- get_discography(artist, get_spotify_access_token())
View(future_discography)
future_by_album <- future_discography %>%
group_by(album_name)
View(future_by_album)
future_liveness <- future_discography %>%
arrange(-liveness) %>%
select(track_name, liveness) %>%
head(5) %>%
kable()
future_liveness <- future_discography %>%
arrange(-liveness) %>%
select(track_name, liveness) %>%
head(5)
View(future_liveness)
future_loudness <- future_discography %>%
arrange(-loudness) %>%
select(track_name, loudness) %>%
head(5)
View(future_loudness)
future_loudness <- future_discography %>%
arrange(-loudness) %>%
select(track_name, loudness) %>%
head(10)
View(future_loudness)
future_loudness <- future_discography %>%
arrange(-loudness) %>%
select(track_name, loudness) %>%
head(5)
View(future_loudness)
future_albums <- future_discography %>%
group_by(album_name)
summarize("songs" = n())
View(future_albums)
future_albums <- future_discography %>%
group_by(album_name)
summarize(album_name)
future_albums <- future_discography %>%
group_by(album_name) %>%
summarize("songs" = n())
View(future_albums)
future_albums <- future_discography %>%
group_by(album_id) %>%
summarize("songs" = n())
future_albums <- future_discography %>%
group_by(album_id, album_name) %>%
summarize("songs" = n())
future_albums <- future_discography %>%
group_by(album_name) %>%
filter(explicit = "TRUE") %>%
summarize("songs" = n())
future_albums <- future_discography %>%
group_by(album_name) %>%
filter(explicit == "TRUE") %>%
summarize("songs" = n())
future_albums <- future_discography %>%
group_by(album_name) %>%
filter(explicit == "TRUE") %>%
summarize("songs" = n()) %>%
arrange(desc(year))
future_albums <- future_discography %>%
group_by(album_name) %>%
filter(explicit == "TRUE") %>%
summarize("songs" = n()) %>%
arrange(desc(album_release_year))
future_albums <- future_discography %>%
group_by(album_name, album_release_year) %>%
filter(explicit == "TRUE") %>%
summarize("songs" = n()) %>%
arrange(desc(album_release_year))
View(future_liveness)
View(future_loudness)
future_song_length <- future_discography %>%
select(track_name, album_name, duration_ms, album_release_year) %>%
arrange(desc(duration_ms))
View(future_song_length)
future_song_length %>%
ggplot(aes(x = album_release_year, y = duration_ms, fill = duration_ms)) +
geom_bar(stat = "identity") +
labs(title = "311 Calls for Service By Day, San Francisco",
subtitle = "SF PD Service Call Data, 2016-2019",
caption = "Graphic by Wells",
y="Number of Calls",
x="Day")
future_song_length %>%
ggplot(aes(x = track_name, y = duration_ms, fill = duration_ms)) +
geom_bar(stat = "identity") +
labs(title = "311 Calls for Service By Day, San Francisco",
subtitle = "SF PD Service Call Data, 2016-2019",
caption = "Graphic by Wells",
y="Number of Calls",
x="Day")
future_song_length %>%
ggplot(aes(x = track_name, y = duration_ms, fill = duration_ms)) +
geom_bar(stat = "identity") +
labs(title = "Length of Future Songs by Year",
subtitle = "Spotify API Data",
caption = "Graphic by Matt Haraden",
y="Length (miliseconds)",
x="Year")
future_song_length %>%
ggplot(aes(x = track_name, album_release_year, y = duration_ms, fill = duration_ms)) +
geom_bar(stat = "identity") +
labs(title = "Length of Future Songs by Year",
subtitle = "Spotify API Data",
caption = "Graphic by Matt Haraden",
y="Length (miliseconds)",
x="Year")
future_song_length <- future_discography %>%
select(track_name, album_name, duration_ms, album_release_date) %>%
arrange(desc(duration_ms))
future_albums <- future_discography %>%
group_by(album_name, album_release_date) %>%
filter(explicit == "TRUE") %>%
summarize("songs" = n()) %>%
arrange(desc(album_release_date))
future_song_length %>%
ggplot(aes(x = track_name, y = duration_ms, fill = duration_ms)) +
geom_bar(stat = "identity") +
labs(title = "Length of Future Songs by Year",
subtitle = "Spotify API Data",
caption = "Graphic by Matt Haraden",
y="Length (miliseconds)",
x="Year")
future_song_length %>%
ggplot(aes(x = album_release_date, y = duration_ms, fill = duration_ms)) +
geom_bar(stat = "identity") +
labs(title = "Length of Future Songs by Year",
subtitle = "Spotify API Data",
caption = "Graphic by Matt Haraden",
y="Length (miliseconds)",
x="Year")
future_song_length %>%
ggplot(aes(x = track_name, y = duration_ms, fill = duration_ms)) +
geom_bar(stat = "identity") +
labs(title = "Length of Future Songs by Year",
subtitle = "Spotify API Data",
caption = "Graphic by Matt Haraden",
y="Length (miliseconds)",
x="Year")
future_song_length <- future_discography %>%
select(track_name, album_name, duration_ms, album_release_date) %>%
arrange(desc(album_release_date))
future_song_length <- future_discography %>%
select(track_name, album_name, duration_ms, album_release_date) %>%
arrange(album_release_date)
future_song_length %>%
ggplot(aes(x = track_name, y = duration_ms, fill = duration_ms)) +
geom_bar(stat = "identity") +
labs(title = "Length of Future Songs by Year",
subtitle = "Spotify API Data",
caption = "Graphic by Matt Haraden",
y="Length (miliseconds)",
x="Year")
future_song_length %>%
ggplot(aes(x = album_release_date, y = duration_ms, fill = duration_ms)) +
geom_bar(stat = "identity") +
labs(title = "Length of Future Songs by Year",
subtitle = "Spotify API Data",
caption = "Graphic by Matt Haraden",
y="Length (miliseconds)",
x="Year")
future_song_length <- future_discography %>%
select(track_name, album_name, duration_ms, album_release_year) %>%
arrange(album_release_date)
future_song_length <- future_discography %>%
select(track_name, album_name, duration_ms, album_release_year) %>%
arrange(album_release_year)
future_song_length %>%
ggplot(aes(x = album_release_year, y = duration_ms, fill = duration_ms)) +
geom_bar(stat = "identity") +
labs(title = "Length of Future Songs by Year",
subtitle = "Spotify API Data",
caption = "Graphic by Matt Haraden",
y="Length (miliseconds)",
x="Year")
options(scipen=999)
future_song_length %>%
ggplot(aes(x = album_release_year, y = duration_ms, fill = duration_ms)) +
geom_bar(stat = "identity") +
labs(title = "Length of Future Songs by Year",
subtitle = "Spotify API Data",
caption = "Graphic by Matt Haraden",
y="Length (miliseconds)",
x="Year")
future_song_length <- future_discography %>%
select(track_name, album_name, duration_ms, album_release_year) %>%
mutate("seconds"= duration_ms*1000) %>%
arrange(album_release_year)
future_song_length <- future_discography %>%
select(track_name, album_name, duration_ms, album_release_year) %>%
mutate("seconds"= duration_ms/1000) %>%
arrange(album_release_year)
future_song_length %>%
ggplot(aes(x = album_release_year, y = seconds, fill = duration_ms)) +
geom_bar(stat = "identity") +
labs(title = "Length of Future Songs by Year",
subtitle = "Spotify API Data",
caption = "Graphic by Matt Haraden",
y="Length (seconds)",
x="Year")
future_song_length <- future_discography %>%
select(track_name, album_name, duration_ms, album_release_year) %>%
mutate("seconds"= duration_ms/1000) %>%
mutate("minutes" = seconds/60) %>%
arrange(album_release_year)
future_song_length %>%
ggplot(aes(x = album_release_year, y = minutes, fill = duration_ms)) +
geom_bar(stat = "identity") +
labs(title = "Length of Future Songs by Year",
subtitle = "Spotify API Data",
caption = "Graphic by Matt Haraden",
y="Length (minutes)",
x="Year")
future_song_length %>%
ggplot(aes(x = album_release_year, y = minutes, )) +
geom_bar(stat = "identity") +
labs(title = "Length of Future Songs by Year",
subtitle = "Spotify API Data",
caption = "Graphic by Matt Haraden",
y="Length (minutes)",
x="Year")
future_song_length %>%
ggplot(aes(x = album_release_year, y = minutes, fill = minutes )) +
geom_bar(stat = "identity") +
labs(title = "Length of Future Songs by Year",
subtitle = "Spotify API Data",
caption = "Graphic by Matt Haraden",
y="Length (minutes)",
x="Year")
future_song_length <- future_discography %>%
select(track_name, album_name, duration_ms, album_release_year) %>%
mutate("seconds"= duration_ms/1000) %>%
mutate("minutes" = seconds/60) %>%
arrange(minutes)
future_song_length <- future_discography %>%
select(track_name, album_name, duration_ms, album_release_year) %>%
mutate("seconds"= duration_ms/1000) %>%
mutate("minutes" = seconds/60) %>%
arrange(desc(minutes))
future_song_length <- future_discography %>%
filter(minutes < 10)
future_song_length <- future_discography %>%
filter(minutes < 10) %>%
select(track_name, album_name, duration_ms, album_release_year) %>%
mutate("seconds"= duration_ms/1000) %>%
mutate("minutes" = seconds/60) %>%
arrange(desc(minutes))
future_song_length <- future_discography %>%
filter(minutes < 10) %>%
select(track_name, album_name, duration_ms, album_release_year) %>%
mutate("seconds"= duration_ms/1000) %>%
mutate("minutes" = seconds/60) %>%
arrange(desc(minutes))
future_song_length <- future_discography %>%
select(track_name, album_name, duration_ms, album_release_year) %>%
mutate("seconds"= duration_ms/1000) %>%
mutate("minutes" = seconds/60) %>%
filter(minutes < 10) %>%
arrange(desc(minutes))
future_song_length %>%
ggplot(aes(x = album_release_year, y = minutes, fill = minutes )) +
geom_bar(stat = "identity") +
labs(title = "Length of Future Songs by Year",
subtitle = "Spotify API Data",
caption = "Graphic by Matt Haraden",
y="Length (minutes)",
x="Year")
